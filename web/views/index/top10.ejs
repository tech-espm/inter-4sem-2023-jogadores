<div class="container-fluid">
	<h1 class="my-4">
		Top 10 Jogos por Data
	</h1>

	<div class="card shadow my-4">
		<div class="card-body">
			<div class="row">
				<div class="col-sm-4">
					<div class="form-group">
						<label for="data">
							Data de Interesse
						</label>
						<input class="form-control" type="date" id="data" value="<%= hoje %>" />
					</div>
				</div>
			</div>
			<button type="button" class="btn btn-primary" onclick="buscar()">Buscar</a>
		</div>
	</div>

	<div class="card shadow my-4">
		<div class="card-body" id="div-grafico"></div>
	</div>
</div>

<script type="text/javascript" src="/public/chart.js/chart.min.js"></script>

<script type="text/javascript">

	async function buscar() {
		let div = document.getElementById("div-grafico");
		div.innerHTML = '<canvas id="grafico-barras" style="height: 50vh;"></canvas>';

		let labels = [], data = [];

		try {
			let response = await fetch("/api/jogo/listarTop10PorData?data=" + encodeURIComponent(document.getElementById("data").value));
			if (!response.ok) {
				alert("Erro ao buscar os dados!");
				return;
			}

			let dados = await response.json();
			if (!dados || !dados.length) {
				alert("Sem dados na data especificada!");
				return;
			}

			for (let i = 0; i < dados.length; i++) {
				labels.push(dados[i].nome);
				data.push(11 - dados[i].posicao);
			}

		} catch (ex) {
			alert("Erro ao atualizar: " + ex.message);
			return;
		}

		let grafico = new Chart(document.getElementById("grafico-barras"), {
			type: 'bar',
			data: {
				labels: labels,
				datasets: [{
					label: "Posição",
					backgroundColor: "#4e73df",
					hoverBackgroundColor: "#2e59d9",
					borderColor: "#4e73df",
					data: data,
				}],
			},
			options: {
				maintainAspectRatio: false,
				layout: {
					padding: {
						left: 10,
						right: 25,
						top: 25,
						bottom: 0
					}
				},
				plugins: {
					tooltip: {
						callbacks: {
							label: function (context) {
								let label = context.dataset.label || '';

								if (label) {
									label += ': ';
								}
								if (context.parsed.y !== null) {
									label += (11 - context.parsed.y);
								}
								return label;
							}
						}
					}
				},
				scales: {
					x: {
						gridLines: {
							display: false,
							drawBorder: false
						},
						ticks: {
							maxTicksLimit: 10
						},
						maxBarThickness: 25,
					},
					y: {
						//display: false,
						ticks: {
							min: 0,
							max: 10,
							maxTicksLimit: 10,
							padding: 10,
							callback: function(value, index, ticks) {
								return (11 - value).toString();
							}
						},
						gridLines: {
							color: "rgb(234, 236, 244)",
							zeroLineColor: "rgb(234, 236, 244)",
							drawBorder: false,
							borderDash: [2],
							zeroLineBorderDash: [2]
						}
					},
				},
				legend: {
					display: false
				},
				tooltips: {
					titleMarginBottom: 10,
					titleFontColor: '#6e707e',
					titleFontSize: 14,
					backgroundColor: "rgb(255,255,255)",
					bodyFontColor: "#858796",
					borderColor: '#dddfeb',
					borderWidth: 1,
					xPadding: 15,
					yPadding: 15,
					displayColors: false,
					caretPadding: 10
				},
			}
		});
	}

	buscar();

</script>
